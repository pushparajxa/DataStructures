Strongly consistent across regions
-----------------------------------
You or other client in different geographical region can immediately read what you get success
response for your write. (Write can be of new object or update/delete of an existing object).

Amazon S3 achieves high availability by replicating data across multiple servers within AWS data centers.
 If a PUT request is successful, your data is safely stored. Any read (GET or LIST request) that is initiated
  following the receipt of a successful PUT response will return the data written by the PUT request. Here are examples of this behavior:

    A process writes a new object to Amazon S3 and immediately lists keys within its bucket. The new object appears in the list.

    A process replaces an existing object and immediately tries to read it. Amazon S3 returns the new data.

    A process deletes an existing object and immediately tries to read it. Amazon S3 does not return any data because the object has been deleted.

    A process deletes an existing object and immediately lists keys within its bucket. The object does not appear in the listing.


# Reference
  - https://aws.amazon.com/blogs/aws/amazon-s3-update-strong-read-after-write-consistency/
  - https://docs.aws.amazon.com/AmazonS3/latest/userguide/Welcome.html#ConsistencyModel


Conditional Reads & Conditional Writes
---------------------------------------
 - https://aws.amazon.com/about-aws/whats-new/2024/08/amazon-s3-conditional-writes/
 - https://docs.aws.amazon.com/AmazonS3/latest/userguide/conditional-requests.html



Throughput and Latency
----------------------
Prefix:
    A prefix has no fixed number of characters. It is any string between a bucket name and an object name, for example:

        bucket/folder1/sub1/file
        bucket/folder1/sub2/file
        bucket/1/file
        bucket/2/file

    Prefixes of the object 'file' would be: /folder1/sub1/ , /folder1/sub2/, /1/, /2/.


  Throughput
  -----------
    Request Rate: Amazon S3 can handle a high number of requests per second. Specifically, it supports
    at least 3,500 PUT/COPY/POST/DELETE requests and 5,500 GET/HEAD requests per second per prefix
     in a bucket.

   By using multiple prefixes, you can scale your read and write performance significantly.
   For example, using 10 prefixes can scale read performance to 55,000 requests per second

  Data Transfer Rates: Applications can achieve high data transfer rates, potentially maximizing
   the network interface usage of Amazon EC2 instances, which can be up to 100 Gb/s on a single instance
   Aggregating throughput across multiple instances can result in multiple terabits per second



  Latency
  -------
      General Latency: Amazon S3 provides consistent small object latencies and first-byte-out latencies for larger objects,
      typically in the range of 100â€“200 milliseconds

  . This makes it suitable for latency-sensitive applications, such as social media messaging

  Latency Optimization: To further reduce latency, especially over long distances, Amazon S3 Transfer Acceleration can be used.
  This service utilizes Amazon CloudFront's globally distributed edge locations to accelerate data transfers

  #Reference
    1. https://www.perplexity.ai/search/could-you-design-below-write-a-fXXnGWjzQuGBgKdunzrVog#5
    2. https://stackoverflow.com/questions/52443839/s3-what-exactly-is-a-prefix-and-what-ratelimits-apply/56155997
    3. https://docs.aws.amazon.com/AmazonS3/latest/userguide/optimizing-performance.html