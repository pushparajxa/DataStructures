- Spring Boot will automatically configure your data source for you Based on entries from Maven pom file
      + JDBC Driver: mysql-connector-java
      + Spring Data (ORM): spring-boot-starter-data-jpa

   - We do not need to define datasource in xml like in
          "web-customer-track" project file
                      spring-mvc-crud-demo.servelt.xml

      also need not to declare as configuration in java like in
          "spring-web-customer-tracker-all-java-config"
                file DemoAppConfig.java


   - DB connectio is taken from application.proerties
      spring.datasource.url=jdbc:mysql://localhost:3306/employee_directory
      spring.datasource.username=springstudent
      spring.datasource.password=springstudent

   - No need to give JDBC driver class name Spring Boot will automatically detect it based on URL

   - Properties are available to configure connection pool etc

   - Based on configs, Spring Boot will automatically create the beans:
      DataSource, EntityManager, ... 

   - You can then inject these into your app, for example your DAO 

   - EntityManager is from Java Persistence API (JPA)

   # Reference
    - 10-spring-boot-rest-crud-with-hibernate-pdfs/ 04-spring-boot-rest-dao.pdf