

Definitions of PUT, HEAD, GET, POST and DELETE are mentioned here
=================================================================
https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.1.2

Idempotent Methods
===================
* GET, HEAD, PUT and DELETE

* Reference
  - Section 9.1.2 * Section 9.1.2 https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.1.2

Non-Idempotent Methods
======================
* POST

* Reference
  - Section 9.1.2 https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.1.2

Safe Methods
=============
* GET, HEAD

* Reference
  - Section 9.1.2 https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.1.2


Difference between POST and PUT
========================================
The fundamental difference between the POST and PUT requests is reflected in the different meaning of the Request-URI.
The URI in a POST request identifies the resource that will handle the enclosed entity. That resource might be a
data-accepting process, a gateway to some other protocol, or a separate entity that accepts annotations.
In contrast, the URI in a PUT request identifies the entity enclosed with the request -- the user agent knows what URI
is intended and the server MUST NOT attempt to apply the request to some other resource. If the
server desires that the request be applied to a different URI,


HEAD
=======
The HEAD method is used to ask only for information about a document, not for the document itself.
HEAD is much faster than GET, as a much smaller amount of data is transferred.
It's often used by clients who use caching, to see if the document has changed since it was last accessed.
If it was not, then the local copy can be reused, otherwise the updated version must be retrieved with a GET.
The metainformation contained in the HTTP headers in response to a HEAD request should be identical to the information sent in response to a GET request.
This method can be used for obtaining metainformation about the resource identified by the request URI without transferring the data itself.
This method is often used for testing hypertext links for validity, accessibility, and recent modification.

Refer:
  - https://condor.depaul.edu/dmumaugh/readings/handouts/SE435/HTTP/node14.html