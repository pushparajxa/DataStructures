HTTP is a single request and response protocol.

Main Reference: http://nadirmuzaffar.blogspot.com/2013/03/polling-long-polling-comet-server-side.html

HTTP 1.1
--------
* All connections are persistent by-default (with timeout).
* Timeout: connection timeout of Apache httpd 1.3 and 2.0 is as little as 15 seconds and just 5
  seconds for Apache httpd 2.2 and above.
     * Refer: https://en.wikipedia.org/wiki/HTTP_persistent_connectio

HTTP Pipelining
---------------
* It is available with HTTP-1.1

* Client sends requests more the persistent connection and the server should return the responses in
 correct order the requests are received.

* Non-Idempotent requests like POST shall not be pipelined. As per standards specification.
  - Section 8.1.1.2 Pipelining
    # https://www.w3.org/Protocols/rfc2616/rfc2616-sec8.html

* Head of line blocking (HOL)

  - One form of HOL blocking in HTTP/1.1 is when the number of allowed parallel requests in the browser is used up,
    and subsequent requests need to wait for the former ones to complete. HTTP/2 addresses this issue through request multiplexing,
    which eliminates HOL blocking at the application layer, but HOL still exists at the transport (TCP) layer.
    HTTP/3 uses QUIC instead of TCP which removes HOL blocking in the transport layer.

   - Reference:
    # https://en.wikipedia.org/wiki/Head-of-line_blocking


* Reference
  - https://en.wikipedia.org/wiki/HTTP_pipelining


HTTP Persistent Connections
----------------------------
* It is the idea of using single TCP connection to send and receive multiple HTTP
  requests/responses, as opposed to opening a new connection for every single request/response pair.

* Refer https://en.wikipedia.org/wiki/HTTP_persistent_connection

HTTP Long Polling:
-------------------
Client makes a request. After server sends a response the transaction is complete but the
underlying (TCP) (will stay unless closed by server or client) will stay open. Then client can make
another request. Server can take any amount of time (less than or equal to timeout) to send a
response.

Refer: https://stackoverflow.com/a/31335574/1171533
Timeout: connection timeout of Apache httpd 1.3 and 2.0 is as little as 15 seconds and just 5
seconds for Apache httpd 2.2 and above.
   Refer: https://en.wikipedia.org/wiki/HTTP_persistent_connection

* Long polling code example is in the package com.html.http.longpolling


HTTP Streaming (Using HTTP 1.1)
---------------
* HTTP streaming is only involves the HTTP protocol and not websockets. Streaming is also the basis for HTML5 server sent events.

COMET
------
Client makes a request. Server never ends the response. Will keep on sending messages. End of
message is identified with an identifier.

* Refer:
  * https://en.wikipedia.org/wiki/Comet_%28programming%29
  * https://infrequently.org/wp-content/LowLatencyData.pdf
  * Comet: Low Latency Data for the Browser (Alex Russel)
    - https://infrequently.org/2006/03/comet-low-latency-data-for-the-browser/
  * http://nadirmuzaffar.blogspot.com/2013/03/polling-long-polling-comet-server-side.html


      Difference between Long polling with HTTP 1.1 vs COMET
      ------------------------------------------------------
      * In comet there is single request from the client and server never ends the response. In long
        polling client will be making requests after receiving updates from it.

      * Refer http://nadirmuzaffar.blogspot.com/2013/03/polling-long-polling-comet-server-side.html

      * https://stackoverflow.com/questions/892287/advantage-of-comet-over-long-request-polling?rq=1
            [Advantage of COMET over long request polling?]


      Buffering problem with COMET and Long polling and HTTP Streaming
      ----------------------------------------------------------------
      * https://gist.github.com/CMCDragonkai/6bfade6431e9ffb7fe88

      Difference between HTTP Streaming and COMET
      -------------------------------------------
      * If you don't know the amount of data that you are going to send, i.e., live stream of a
        match, you send the data in packets/chunks, which what HTTP Streamig about. In COMET you are
        sending updates to the client from the server through single open connection.



Server Sent Events
------------------
* COMET and HTTP Streams suffer the problem of buffering. SSE will eliminate that by sending HTTP ACKs.
* Content type shall be set as below
    * Content-type: text/event-stream
* Limitations of SSE
  * Maximum open connections, which can be specially painful when opening various tabs as the limit is per browser and set to a very low number (6)
      * https://stackoverflow.com/a/5326159/1171533
* Reference:
    * http://nadirmuzaffar.blogspot.com/2013/03/polling-long-polling-comet-server-side.html
    * https://medium.com/javarevisited/building-scalable-facebook-like-notification-using-server-sent-event-and-redis-9d0944dee618
    * https://www.baeldung.com/spring-server-sent-events
    * https://javascript.info/server-sent-events


Web Sockets
------------
* Reference:
  * http://nadirmuzaffar.blogspot.com/2013/03/polling-long-polling-comet-server-side.html


HTTP1 vs HTTP-1.1 vs HTTP2 vs HTTP3
-----------------------------------
https://www.youtube.com/watch?v=a-sBfyiXysI

* HTTP-2: Multiple streams can be set on single TCP connection.
* Head of line blocking is an issue with HTTP -1.1 Pipelining. Also responses should be also arrive in the order they were sent.
* HTTP-2 solves the problem at application layer but the problem persists at the transport layer.
* HTTP-3: Introduced QUIC protocol where streams are first class citizens.
  * QUIC is based on UDP.
  * Each stream is independent of other streams.
  * It is used by 25% of websites.

Difference between Long-Polling, Websockets, Server-Sent Events (SSE) and Comet
-------------------------------------------------------------------------------
* https://stackoverflow.com/a/12855533
* https://stackoverflow.com/a/67758338
* * My Understanding of HTTP Polling, Long Polling, HTTP Streaming and WebSockets
    https://stackoverflow.com/questions/12555043/my-understanding-of-http-polling-long-polling-http-streaming-and-websockets

References:
-------------
* Does CometD (Comet with Bayeux Protocol) use HTTP streaming or HTTP long polling?
  * https://stackoverflow.com/questions/31332016/does-cometd-comet-with-bayeux-protocol-use-http-streaming-or-http-long-polling

* What is Cometd ? Why it is used and how to work on that
  * https://stackoverflow.com/questions/27317774/what-is-cometd-why-it-is-used-and-how-to-work-on-that

* WebSockets vs. Server-Sent events/EventSource
  * https://stackoverflow.com/questions/5195452/websockets-vs-server-sent-events-eventsource

* Server client communication: Long Polling, Comet, & Server-sent Events (SSE)
  * https://stackoverflow.com/questions/10800282/server-client-communication-long-polling-comet-server-sent-events-sse


HTTP Pipelining
----------------
https://www-archive.mozilla.org/projects/netlib/http/pipelining-faq




